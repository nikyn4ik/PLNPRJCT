// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Database.Authorization", b =>
                {
                    b.Property<int>("ID_aut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_aut"));

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_aut");

                    b.ToTable("Authorization");
                });

            modelBuilder.Entity("Database.Certificate", b =>
                {
                    b.Property<int>("IdQuaCertificate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdQuaCertificate"));

                    b.Property<DateTime>("DateAddCertificate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductStandard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StandardPerMark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdQuaCertificate");

                    b.ToTable("Certificate");
                });

            modelBuilder.Entity("Database.Confirmation", b =>
                {
                    b.Property<int>("IdConfirmation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConfirmation"));

                    b.Property<string>("DoneDelivery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductStandard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdConfirmation");

                    b.ToTable("Confirmation");
                });

            modelBuilder.Entity("Database.Delivery", b =>
                {
                    b.Property<int>("IdDelivery")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDelivery"));

                    b.Property<string>("Consignee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductStandard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDelivery");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("Database.Orders", b =>
                {
                    b.Property<int>("IdOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrder"));

                    b.Property<string>("AccessStandart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfAdoption")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfEntrance")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdConsignee")
                        .HasColumnType("int");

                    b.Property<int>("IdPayer")
                        .HasColumnType("int");

                    b.Property<int>("IdQuaCertificate")
                        .HasColumnType("int");

                    b.Property<double>("LengthMm")
                        .HasColumnType("float");

                    b.Property<string>("LogC3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameConsignee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameStorage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystC3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ThicknessMm")
                        .HasColumnType("float");

                    b.Property<double>("WidthMm")
                        .HasColumnType("float");

                    b.HasKey("IdOrder");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Database.Shipment", b =>
                {
                    b.Property<int>("IdShipment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdShipment"));

                    b.Property<string>("Consignee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfShipments")
                        .HasColumnType("datetime2");

                    b.Property<float>("NumberOfShipmentsPerMonthTons")
                        .HasColumnType("real");

                    b.Property<int>("ShipmentTotalAmountTons")
                        .HasColumnType("int");

                    b.HasKey("IdShipment");

                    b.ToTable("Shipment");
                });

            modelBuilder.Entity("Database.Storage", b =>
                {
                    b.Property<int>("IdStorage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStorage"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateAddStorage")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameStorage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneStorage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remainder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStorage");

                    b.ToTable("Storage");
                });

            modelBuilder.Entity("Database.TypeProduct", b =>
                {
                    b.Property<int>("IdTypeProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypeProduct"));

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SapProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTypeProduct");

                    b.ToTable("TypeProduct");
                });

            modelBuilder.Entity("Database.Users", b =>
                {
                    b.Property<int>("ID_aut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_aut"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_aut");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
